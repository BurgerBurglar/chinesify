import type { NextPage } from "next";
import Head from "next/head";
import { ChangeEvent, useState } from "react";
import { getMingOptions, getXingOptions } from "../fetch";
import { Gender } from "../types";

const Home: NextPage = () => {
  const [givenName, setGivenName] = useState("");
  const [familyName, setFamilyName] = useState("");
  const [gender, setGender] = useState<Gender>("m");
  const [mingOptions, setMingOptions] = useState<[string[], string[]]>([
    [],
    [],
  ]);
  const [xingOptions, setXingOptions] = useState<string[]>([]);

  const handleGenderChange = (e: ChangeEvent<HTMLInputElement>) => {
    setGender(e.target.value as Gender);
  };

  const handleClick = async () => {
    const newMingOptions = await getMingOptions(givenName, { gender });
    setMingOptions(newMingOptions);

    const newXingOptions = await getXingOptions(familyName);
    setXingOptions(newXingOptions);
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="flex flex-col gap-2 items-center max-w-lg mx-auto">
        <div className="flex flex-col justify-between w-full">
          <label htmlFor="given-name">Given Name</label>
          <input
            id="given-name"
            className="text-3xl outline outline-1 outline-gray-200 text-red-800"
            type="text"
            value={givenName}
            onChange={(e) => setGivenName(e.target.value)}
          />
        </div>
        <div className="flex flex-col justify-between w-full">
          <label htmlFor="family-name">Family Name</label>
          <input
            id="family-name"
            className="text-3xl outline outline-1 outline-gray-200 text-green-800"
            type="text"
            value={familyName}
            onChange={(e) => setFamilyName(e.target.value)}
          />
        </div>
        <fieldset id="gender" className="flex gap-2 items-center">
          <input
            type="radio"
            id="Male"
            name="gender"
            value="m"
            onChange={handleGenderChange}
          />
          <label htmlFor="Male">Male</label>
          <input
            type="radio"
            id="Female"
            name="gender"
            value="f"
            onChange={handleGenderChange}
          />
          <label htmlFor="Female">Female</label>
        </fieldset>
        <button
          className="rounded-md bg-blue-600 hover:bg-blue-700 active:bg-blue-800 text-white text-xl  w-fit px-2 py-1 "
          onClick={handleClick}
        >
          generate
        </button>
        <div className="flex gap-2 text-[5rem]">
          <select className="text-green-800" name="xing">
            {xingOptions.map((xing) => (
              <option className="text-lg" key={xing} value={xing}>
                {xing}
              </option>
            ))}
          </select>
          <select className="text-red-800" name="ming1">
            {mingOptions[0].map((ming1) => (
              <option className="text-lg" key={ming1} value={ming1}>
                {ming1}
              </option>
            ))}
          </select>
          <select className="text-red-800" name="ming2">
            {mingOptions[1].map((ming2) => (
              <option className="text-lg" key={ming2} value={ming2}>
                {ming2}
              </option>
            ))}
          </select>
        </div>
      </div>
    </>
  );
};

export default Home;
